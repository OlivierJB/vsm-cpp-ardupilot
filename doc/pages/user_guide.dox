/**

@page vsm_user_guide Connecting Ardupilot autopilot to UgCS

@image latex ugcs-logo.png "" width=3cm
@image latex main-vsm-logo.png "" width=3cm


@section first_time_connecton First time vehicle connection

See @ref vsm_disclaimer.

Please follow these steps to connect an Ardupilot vehicle to the UgCS:

1. Ardupilot vehicle must be properly configured, calibrated and
tested using tools and instruction from the official
[Ardupilot web site](http://www.ardupilot.com) prior to using it with UgCS.
UgCS does not support initial configuration, setup and calibration of Ardupilot
driven vehicles.

2. If more than one Ardupilot vehicle is planned to be used with UgCS, it must
be ensured that each vehicle has a unique system id as defined by the parameter
_SYSID_THISMAV_, otherwise UgCS will not be able to distinguish between different
vehicles and it will not be possible to operate vehicles normally. To change the
parameter, please use the official Ardupilot configuration software like Mission
Planner.

3. Turn on the vehicle and plug in the radio modem paired with the vehicle or
direct USB cable from the Ardupilot board to the computer where VSM is running.
UgCS uses serial ports for communication with Ardupilot vehicles. Standard
communication devices like 3DR radio modems (and their analogs) and direct USB
connections are supported, as long as OS driver for virtual serial port is
installed and serial port is successfully created. Please refer to your
communication equipment manufacturer documentation about driver installation
instructions.

4. As soon as uplink and downlink connection is established, the vehicle should
appear in the active vehicles list in main (map) view. Open _Vehicles_ window
from main menu and choose the corresponding vehicle for editing by clicking on
the menu item and selecting _Edit_ button. Now you can select the vehicle
profile and change the default vehicle name to be convenient for you:
@image html new-ardu-vehicle.png "New Ardupilot vehicle"
@image latex new-ardu-vehicle.png "New Ardupilot vehicle" width=15cm
Vehicle profile needs to be assigned to allow mission planning with this vehicle.
Vehicle avatar should be assigned in vehicle profile to properly see the vehicle
location on map.

5. Repeat steps above for each your Ardupilot vehicle.

Supported vehicle types:
- Copters
- Planes

Supported Ardupilot firmware versions:
- 3.0
- 3.1.x
- 3.2.x
- 3.3.x

Supported hardware platforms:
- APM
- Pixhawk

_Note: Pixhawk with PX4 autopilot is not supported._

@section mission_execution_specifics Mission execution specifics

@note  If one wants to use automatic take-off, it is strongly recommended to place the first waypoint above the actual location of the vehicle. Otherwise the vehicle will reach for the first waypoint in a straight line thus possibly causing danger.

__Mission action support:__
Flight plan element / action | Support | Notes
-----------------------------|---------|---------
Change speed    |  Partial | Changing of flight speed during the mission may work only on latest 3.3.x firmware.
Panorama        |  Partial | Only clock-wise movement is supported due to Ardupilot firmware bug. UgCS provides correct angle values according to Mavlink specification.
Set camera mode |  Partial | Only photo mode is supported. |
Set camera by time | Partial | "First shot delay" parameter is not supported. |
Set camera by distance | Partial | Only "Distance" parameter is supported. |

__Camera control__

For using camera you should set up necessary parameters in ArduPilot native 
software according to your hardware configuration. See also @ref camera_control_params
- VSM configuration should match your copter configuration. See ArduCopter
manual for details.

For example, in MissionPlanner the camera set up can be done in "Initial setup"
page "Optional hardware/Camera gimbal/Shutter" section. Select the channel your
shutter is connected to and set other parameters depending on your shutter
control hardware.

@section home_location Home Location

Home location support differs depending on ArduPilot firmware.

__ArduCopter firmware version up to 3.2.1__

@warning Home location set via mission is ignored by Ardupilot firmware version 3.2.1.

Ardupilot will always override home location with current position at the time of arming.<br>
When "RETURN_HOME" command is issued from UgCS Client or RC transmitter, vehicle will return to the location it was armed at regardless of home location set in mission.

__ArduCopter firmware version 3.3.1 and up__

Mission upload automatically sets Home location. There are two restrictions on Home location:

- Home location can be set only while enough GPS satellites are visible.

- Home location should be close to current location (within 50km)

Mission will fail to upload if any of the above conditions do not hold.  


@subsection home_location_land Landing at Home Location

Vehicle behavior after returning at Home Location depends on on the configuration parameter RTL_ATL_FINAL:

- RTL_ATL_FINAL == 0: Vehicle will land automatically
- RTL_ATL_FINAL > 0: Vehicle will descend to given altitude (in centimeters) and hover there waiting for user control.

@note RTL_ATL_FINAL parameter can be set using MissionPlanner software.


@section command_execution_specifics Command execution specifics

Command        | Support  | Notes
---------------|----------|---------
ARM            |  Yes     | Arms vehicle. |
DISARM         |  Yes     | Disarms vehicle. |
AUTOMODE       |  Yes     | Sets _Auto_ flight mode. |
MANUALMODE     |  Yes     | Sets _Loiter_ flight mode. |
CLICK & GO     |  Yes     | Sets _Click & Go_ (single waypoint) mode. |
HOLD           |  Yes     | Pause mission execution. The drone will loiter at its current position. |
CONTINUE       |  Yes     | Continue mission execution if previously paused by HOLD. |
RETURN HOME    |  Yes     | Vehicle will return to home location. See also @ref home_location. |
TAKEOFF        |  No      | |
LAND           |  Yes     | |
EMERGENCYLAND  |  No      | |
CAMERA_TRIGGER |  No      | |

@section commands_shading Command shading
UGCS Client can show command buttons in different shades. You can always press all buttons disregarding of shade. Highlighted buttons suggest recommended commands, depending on vehicle current status.

__Command shading:__
State		| Button highlighted | Button shaded |
------------|--------------------|---------------
Armed		| DISARM, AUTOMODE, MANUALMODE, LAND, RETURNHOME, CLICK-GO, HOLD, CONTINUE | ARM |
Disarmed	| ARM | DISARM, AUTOMODE, MANUALMODE, LAND, RETURNHOME, CLICK-GO, HOLD, CONTINUE |

@section telemetry_info Telemetry information specifics

@subsection air_speed Air speed
If there is no air speed sensor onboard, air speed will be shown as "Not available". If there is an air speed sensor onboard, the air speed value will be shown.

@subsection rc_link_quality RC link quality
Ardupilot reports RC link loss correctly only when throttle failsafe is activated.
- Throttle failsafe must be configured. (Set parameter FS_THR_ENABLE to nonzero and configure throttle channel to go below FS_THR_VALUE on RC link loss)
- Ardupilot reports RC link correctly only while armed. If RC signal is lost while vehicle is disarmed it will still appear as 100%. (This is Ardupilot firmware limitation)
- RC link quality is available only for multicopter and heli firmware (ArduCopter). Fixed wing (ArduPlane) and rover (ArduRover) does not report RC link status.

@section fail-safe Fail-safe actions

__GPS Lost:__
Action		   |Result
---------------|-------------------|
Wait			| Aircraft tries to maintain altitude|
Land			| Aircraft lands even if in loiter mode|

__RC Lost:__
Action		   |Result
---------------|-------------------|
Wait			| Aircraft changes altitude to failsafe alt. (set via MissionPlanner) and returns home|
Land			| Aircraft lands even if in loiter mode|
Return Home		| Aircraft changes altitude to failsafe alt. (set via MissionPlanner) and returns home|
Continue		| Aircaft continues mission|

__Battery Low:__
Action		   |Result
---------------|-------------------|
Wait			| Aircraft changes altitude to failsafe alt. (set via MissionPlanner) and returns home|
Land			| Aircraft changes altitude to failsafe alt. (set via MissionPlanner) and returns home|
Return Home		| Aircraft changes altitude to failsafe alt. (set via MissionPlanner) and returns home|
Continue		| Aircaft continues mission|

@section turn_type_specifics Waypoint turn types

There are 2 different routing planning modes for Ardupilot autopilots: Straight waypoint and Spline waypoint. You can choose turn type for each Waypoint, Circle, Perimeter. The default turn mode in the system is Straight type.

@image html turn-mode.png "Turn type"
@image latex turn-mode.png "Turn type" width=10cm

Turn type          | Support  | Notes
-------------------|----------|---------
Straight           |  Yes     | The vehicle will fly a straight line to the location specified as a lat, lon and altitude. |
Spline             |  Yes     | The vehicle will fly to the location specified as a lat, lon and altitude, but when executed the vehicle will fly smooth paths (both vertically and horizontally) instead of straight lines. |

@note When using Spline turn type make sure the line segment after the waypoint is long enough otherwise autopilot can fly unexpectedly missing some waypoints.
What is "long enough"? The desired segment length varies with speed.
Our tests show that with ground speed 5m/s route segment must be at least 20m long. If speed is set to 10m/s then route segment after the waypoint should be at least 50 meters.

You can find more information about turning mode and supporting autopilots on the site https://github.com/diydrones/apm_planner/issues/274, http://copter.ardupilot.com/wiki/mission-command-list/#spline_waypoint.

@section zigbee_connection Connection using ZigBee interface

There is a possibility to connect UgCS to Ardupilot vehicle using ZigBee
interface. Connection is performed with two or more Digi XBee ZigBee modules (one
on ground side, others on vehicles side) and dedicated UgCS software component
called XBee Connector. Please refer to XBee Connector user guide for details.

In order to use such kind of connection you are to disable
@ref serial_port_parameters and enable @ref proxy_parameters.


@section config_file_parameters_section Configuration file

Default configuration file of the Ardupilot VSM suits most needs and it is
generally not necessary to modify it.

Configuration file location:
         
- <b>On Microsoft Windows:</b>

         C:\Program Files (x86)\UgCS\bin\vsm-ardupilot.conf

- <b>On GNU/Linux:</b>

         /etc/opt/ugcs/vsm-ardupilot.conf
         
- <b>On Apple OS X:</b>

          /Users/[user name]/Library/Application Support/UGCS/configuration/vsm-ardupilot.conf

@subsection common_params_section Common parameters

All VSMs share a common set of configuration file parameters described in
@ref common_config_file_params. Ardupilot VSM configuration file prefix is:

    vehicle.ardupilot

@subsection serial_port_params_vsmspec Serial port configuration

Mandatory. At least one serial port should be configured, otherwise VSM will not
try to connect to the vehicle.

- @b Name: vehicle.ardupilot.serial_port
- @b Description: Serial port configuration, for more details see
@ref serial_port_parameters.
Default Ardupilot serial port communication speed is 57600 bps.
- @b Example:

         vehicle.ardupilot.serial_port.1.name = com1
         vehicle.ardupilot.serial_port.1.baud = 57600

@subsection model_override_params Model name and serial number override

Optional.

- @b Name: vehicle.ardupilot.custom.[name].system_id = [system id]
- @b Name: vehicle.ardupilot.custom.[name].model_name = [model name]
- @b Name: vehicle.ardupilot.custom.[name].serial_number = [serial number]
- @b Description: In UgCS each vehicle is identified by a unique combination of
model name and serial number represented as text strings. By default, Ardupilot
vehicles are identified with a model name _Ardupilot_ and serial number equal with
the Mavlink system id read from the vehicle. It can be overridden by these
parameters, where [name] is an arbitrary vehicle name, [system id] is the
original Mavlink system id which should be overridden, [model name] is a new
model name to be visible to the UgCS, [serial number] is a new serial number to
be visible to the UgCS.
- @b Example:

        vehicle.ardupilot.custom.my_drone.system_id = 2
        vehicle.ardupilot.custom.my_drone.model_name = ArducopterQuad
        vehicle.ardupilot.custom.my_drone.serial_number = 123456

@subsection camera_control_params Camera control parameters

Mandatory. Read Ardupilot manual about camera triggering configuration to
understand these parameters. It is assumed that the vehicle is configured
in "servo" mode (not "relay") for camera triggering.

- @b Name: vehicle.ardupilot.camera_servo_idx
- @b Description: Index of the servo to use for camera triggering.
- @b Example:

         vehicle.ardupilot.camera_servo_idx = 8
         
- @b Name: vehicle.ardupilot.camera_servo_pwm
- @b Description: PWM value to set for camera triggering servo when taking photo.
- @b Example:

         vehicle.ardupilot.camera_servo_pwm = 1900
         
- @b Name: vehicle.ardupilot.camera_servo_time
- @b Description:  Time to hold camera servo at the specified PWM when triggering single photo in seconds.
- @b Example:

         vehicle.ardupilot.camera_servo_time = 1.0

*/
